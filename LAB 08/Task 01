#include<iostream>
#include<cmath>
using namespace std;

class Complex {
private:
    double real;
    double imag;

public :
    Complex() : real(0), imag(0) {}

    Complex(double real, double imag) : real(real), imag(imag) {}

    Complex operator +(const Complex &obj) const {
        return Complex(real + obj.real, imag + obj.imag);
    }

    Complex operator -(const Complex &obj) const {
        return Complex(real - obj.real, imag - obj.imag);
    }

    Complex operator *(const Complex &obj) const {
        return Complex(
            (real * obj.real - imag * obj.imag),
            (real * obj.imag + imag * obj.real)
        );
    }

    Complex operator /(const Complex &obj) const {
        double denominator = obj.real * obj.real + obj.imag * obj.imag;
        return Complex(
            (real * obj.real + imag * obj.imag) / denominator,
            (imag * obj.real - real * obj.imag) / denominator
        );
    }

    friend ostream& operator <<(ostream &os, const Complex &obj);
    friend double magnitude(const Complex &obj);
};

ostream &operator << (ostream &os, const Complex &obj) {
    os << obj.real << " + " << obj.imag << "i";
    return os;
}

double magnitude(const Complex &obj) {
    return sqrt(obj.real * obj.real + obj.imag * obj.imag);
}

int main () {
    Complex c1(4, 3);
    Complex c2(1, 2);

    Complex sum = c1 + c2;
    Complex diff = c1 - c2;
    Complex product = c1 * c2;
    Complex quotient = c1 / c2;

    cout << "c1: " << c1 << endl;
    cout << "c2: " << c2 << endl;
    cout << "Sum: " << sum << endl;
    cout << "Difference: " << diff << endl;
    cout << "Product: " << product << endl;
    cout << "Quotient: " << quotient << endl;
    cout << "Magnitude of c1: " << magnitude(c1) << endl;

    return 0;
}
