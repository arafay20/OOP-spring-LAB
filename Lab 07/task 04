#include <iostream>
#include <string>
using namespace std;

class Person {
protected:
    string name;
    int age;
    string contactNumber;
    string address;

public:
    Person(string n, int a, string c, string addr = "") : name(n), age(a), contactNumber(c), address(addr) {}
    
    virtual void displayInfo() {
        cout << "Name: " << name << endl;
        cout << "Age: " << age << endl;
        cout << "Contact: " << contactNumber << endl;
        if (!address.empty())
            cout << "Address: " << address << endl;
    }
};

class Patient : public Person {
private:
    string patientID;
    string medicalHistory;
    string doctorAssigned;

public:
    Patient(string n, int a, string c, string pid, string mh, string da, string addr = "") : Person(n, a, c, addr), patientID(pid), medicalHistory(mh), doctorAssigned(da) {}
    
    void displayInfo() {
        Person::displayInfo();
        cout << "Patient ID: " << patientID << endl;
        cout << "Medical History: " << medicalHistory << endl;
        cout << "Doctor Assigned: " << doctorAssigned << endl;
    }
};

class Doctor : public Person {
private:
    string specialization;
    double consultationFee;
    string patientsList[5];
    int patientCount;

public:
    Doctor(string n, int a, string c, string spec, double fee, string addr = ""): Person(n, a, c, addr), specialization(spec), consultationFee(fee), patientCount(0) {}
    
    void addPatient(string patientName) {
        if (patientCount < 5) {
            patientsList[patientCount++] = patientName;
        } else {
            cout << "Patient list is full!" << endl;
        }
    }

    void displayInfo()  {
        Person::displayInfo();
        cout << "Specialization: " << specialization << endl;
        cout << "Consultation Fee: " << consultationFee << endl;
        cout << "Patients: ";
        for (int i = 0; i < patientCount; i++) {
            cout << patientsList[i] << endl;
        }
    }
};

class Nurse : public Person {
private:
    string assignedWard;
    string shiftTimings;

public:
    Nurse(string n, int a, string c, string ward, string shift, string addr = "") : Person(n, a, c, addr), assignedWard(ward), shiftTimings(shift) {}
    
    void displayInfo() {
        Person::displayInfo();
        cout << "Assigned Ward: " << assignedWard << endl;
        cout << "Shift Timings: " << shiftTimings << endl;
    }
};

class Administrator : public Person {
private:
    string department;
    double salary;

public:
    Administrator(string n, int a, string c, string dept, double sal, string addr = "") : Person(n, a, c, addr), department(dept), salary(sal) {}
    
    void displayInfo() {
        Person::displayInfo();
        cout << "Department: " << department << endl;
        cout << "Salary: " << salary << endl;
    }
};

int main() {
    Patient p("John Doe", 30, "123456789", "P001", "Diabetes", "Dr. Smith");
    Doctor d("Dr. Smith", 45, "987654321", "Cardiology", 150);
    Nurse n("Emily", 28, "5551234", "Ward A", "Night Shift");
    Administrator a("Michael", 40, "2223334", "HR", 5000);

    d.addPatient("John Doe");
    
    cout << "\nPatient Info:" << endl;
    p.displayInfo();
    
    cout << "\nDoctor Info:" << endl;
    d.displayInfo();
    
    cout << "\nNurse Info:" << endl;
    n.displayInfo();
    
    cout << "\nAdministrator Info:" << endl;
    a.displayInfo();
    
    return 0;
}
